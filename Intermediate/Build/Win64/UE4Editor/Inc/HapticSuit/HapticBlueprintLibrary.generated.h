// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UHapticExperience;
class UPlaybackHandle;
class UHapticPattern;
class UHapticSequence;
#ifdef HAPTICSUIT_HapticBlueprintLibrary_generated_h
#error "HapticBlueprintLibrary.generated.h already included, missing '#pragma once' in HapticBlueprintLibrary.h"
#endif
#define HAPTICSUIT_HapticBlueprintLibrary_generated_h

#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execClearAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::ClearAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execResumeAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::ResumeAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPauseAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::PauseAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnectedToSuit) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::IsConnectedToSuit(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnectedToService) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::IsConnectedToService(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPlayTestRoutine) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::PlayTestRoutine(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreateExperienceHandle) \
	{ \
		P_GET_OBJECT(UHapticExperience,Z_Param_experience); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreateExperienceHandle(Z_Param_experience); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreatePatternHandle) \
	{ \
		P_GET_OBJECT(UHapticPattern,Z_Param_pattern); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreatePatternHandle(Z_Param_pattern); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreateSequenceHandle) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_area); \
		P_GET_OBJECT(UHapticSequence,Z_Param_sequence); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreateSequenceHandle(Z_Param_area,Z_Param_sequence); \
		P_NATIVE_END; \
	}


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execClearAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::ClearAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execResumeAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::ResumeAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPauseAllHaptics) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::PauseAllHaptics(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnectedToSuit) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::IsConnectedToSuit(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnectedToService) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::IsConnectedToService(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPlayTestRoutine) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UHapticBlueprintLibrary::PlayTestRoutine(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreateExperienceHandle) \
	{ \
		P_GET_OBJECT(UHapticExperience,Z_Param_experience); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreateExperienceHandle(Z_Param_experience); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreatePatternHandle) \
	{ \
		P_GET_OBJECT(UHapticPattern,Z_Param_pattern); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreatePatternHandle(Z_Param_pattern); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCreateSequenceHandle) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_area); \
		P_GET_OBJECT(UHapticSequence,Z_Param_sequence); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UPlaybackHandle**)Z_Param__Result=UHapticBlueprintLibrary::CreateSequenceHandle(Z_Param_area,Z_Param_sequence); \
		P_NATIVE_END; \
	}


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUHapticBlueprintLibrary(); \
	friend HAPTICSUIT_API class UClass* Z_Construct_UClass_UHapticBlueprintLibrary(); \
	public: \
	DECLARE_CLASS(UHapticBlueprintLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/HapticSuit"), NO_API) \
	DECLARE_SERIALIZER(UHapticBlueprintLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_INCLASS \
	private: \
	static void StaticRegisterNativesUHapticBlueprintLibrary(); \
	friend HAPTICSUIT_API class UClass* Z_Construct_UClass_UHapticBlueprintLibrary(); \
	public: \
	DECLARE_CLASS(UHapticBlueprintLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/HapticSuit"), NO_API) \
	DECLARE_SERIALIZER(UHapticBlueprintLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UHapticBlueprintLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UHapticBlueprintLibrary) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UHapticBlueprintLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UHapticBlueprintLibrary); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UHapticBlueprintLibrary(UHapticBlueprintLibrary&&); \
	NO_API UHapticBlueprintLibrary(const UHapticBlueprintLibrary&); \
public:


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UHapticBlueprintLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UHapticBlueprintLibrary(UHapticBlueprintLibrary&&); \
	NO_API UHapticBlueprintLibrary(const UHapticBlueprintLibrary&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UHapticBlueprintLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UHapticBlueprintLibrary); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UHapticBlueprintLibrary)


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_PRIVATE_PROPERTY_OFFSET
#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_29_PROLOG
#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_PRIVATE_PROPERTY_OFFSET \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_RPC_WRAPPERS \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_INCLASS \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_PRIVATE_PROPERTY_OFFSET \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_INCLASS_NO_PURE_DECLS \
	Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h_32_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Plugins_Runtime_HapticSuit_Source_HapticSuit_Classes_HapticBlueprintLibrary_h


#define FOREACH_ENUM_HAPTICFILETYPE(op) \
	op(HapticFileType::Sequence) \
	op(HapticFileType::SequenceOnAll) \
	op(HapticFileType::Pattern) \
	op(HapticFileType::Experience) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
