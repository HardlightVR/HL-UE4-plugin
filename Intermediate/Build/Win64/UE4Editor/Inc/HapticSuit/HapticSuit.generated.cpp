// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/HapticSuitPrivatePCH.h"
#include "HapticSuit.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1HapticSuit() {}
static class UEnum* HapticFileType_StaticEnum()
{
	extern HAPTICSUIT_API class UPackage* Z_Construct_UPackage__Script_HapticSuit();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern HAPTICSUIT_API class UEnum* Z_Construct_UEnum_HapticSuit_HapticFileType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_HapticSuit_HapticFileType, Z_Construct_UPackage__Script_HapticSuit(), TEXT("HapticFileType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_HapticFileType(HapticFileType_StaticEnum, TEXT("/Script/HapticSuit"), TEXT("HapticFileType"), false, nullptr, nullptr);
	void UHapticBlueprintLibrary::StaticRegisterNativesUHapticBlueprintLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "ClearAllHaptics",(Native)&UHapticBlueprintLibrary::execClearAllHaptics);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PlayHaptic",(Native)&UHapticBlueprintLibrary::execPlayHaptic);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PlayHapticExperience",(Native)&UHapticBlueprintLibrary::execPlayHapticExperience);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PlayHapticPattern",(Native)&UHapticBlueprintLibrary::execPlayHapticPattern);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PlayHapticSequence",(Native)&UHapticBlueprintLibrary::execPlayHapticSequence);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PlayHapticSequenceOnAll",(Native)&UHapticBlueprintLibrary::execPlayHapticSequenceOnAll);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "PluginLoadedSuccessfully",(Native)&UHapticBlueprintLibrary::execPluginLoadedSuccessfully);
		FNativeFunctionRegistrar::RegisterFunction(UHapticBlueprintLibrary::StaticClass(), "ResetPlugin",(Native)&UHapticBlueprintLibrary::execResetPlugin);
	}
	IMPLEMENT_CLASS(UHapticBlueprintLibrary, 3090407258);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	HAPTICSUIT_API class UEnum* Z_Construct_UEnum_HapticSuit_HapticFileType();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_ClearAllHaptics();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHaptic();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticExperience();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticPattern();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequence();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequenceOnAll();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PluginLoadedSuccessfully();
	HAPTICSUIT_API class UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_ResetPlugin();
	HAPTICSUIT_API class UClass* Z_Construct_UClass_UHapticBlueprintLibrary_NoRegister();
	HAPTICSUIT_API class UClass* Z_Construct_UClass_UHapticBlueprintLibrary();
	HAPTICSUIT_API class UPackage* Z_Construct_UPackage__Script_HapticSuit();
	UEnum* Z_Construct_UEnum_HapticSuit_HapticFileType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_HapticSuit();
		extern uint32 Get_Z_Construct_UEnum_HapticSuit_HapticFileType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("HapticFileType"), 0, Get_Z_Construct_UEnum_HapticSuit_HapticFileType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HapticFileType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("HapticFileType::Sequence")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("HapticFileType::SequenceOnAll")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("HapticFileType::Pattern")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("HapticFileType::Experience")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("HapticFileType::HapticFileType_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("HapticFileType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Experience.DisplayName"), TEXT("Experience"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Pattern.DisplayName"), TEXT("Pattern"));
			MetaData->SetValue(ReturnEnum, TEXT("Sequence.DisplayName"), TEXT("Sequence on Areas"));
			MetaData->SetValue(ReturnEnum, TEXT("SequenceOnAll.DisplayName"), TEXT("Sequence on All"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Comment from 2/2015 - might be the problem?\nAs for the header - only problem, you only need to define the.generated.h includes for headers that define USTRUCT, UCLASS, etc types.If defining a UCLASS in a header file, you MUST include a companion.cpp file for the header.If the header only defines USTRUCT(s) then you do not need to include a.cpp for it(same goes for UENUM types)."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_HapticSuit_HapticFileType_CRC() { return 2506150421U; }
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_ClearAllHaptics()
	{
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearAllHaptics"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHaptic()
	{
		struct HapticBlueprintLibrary_eventPlayHaptic_Parms
		{
			FString HapticEffectName;
			HapticFileType fileType;
			int32 Where;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayHaptic"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPlayHaptic_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPlayHaptic_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPlayHaptic_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPlayHaptic_Parms), sizeof(bool), true);
			UProperty* NewProp_Where = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Where"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Where, HapticBlueprintLibrary_eventPlayHaptic_Parms), 0x0010000000000080);
			UProperty* NewProp_fileType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fileType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(fileType, HapticBlueprintLibrary_eventPlayHaptic_Parms), 0x0010000000000080, Z_Construct_UEnum_HapticSuit_HapticFileType());
			UProperty* NewProp_fileType_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_fileType, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_HapticEffectName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HapticEffectName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(HapticEffectName, HapticBlueprintLibrary_eventPlayHaptic_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Where"), TEXT("16711935"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticExperience()
	{
		struct HapticBlueprintLibrary_eventPlayHapticExperience_Parms
		{
			FString HapticEffectName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayHapticExperience"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPlayHapticExperience_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPlayHapticExperience_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPlayHapticExperience_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPlayHapticExperience_Parms), sizeof(bool), true);
			UProperty* NewProp_HapticEffectName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HapticEffectName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(HapticEffectName, HapticBlueprintLibrary_eventPlayHapticExperience_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticPattern()
	{
		struct HapticBlueprintLibrary_eventPlayHapticPattern_Parms
		{
			FString HapticEffectName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayHapticPattern"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPlayHapticPattern_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPlayHapticPattern_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPlayHapticPattern_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPlayHapticPattern_Parms), sizeof(bool), true);
			UProperty* NewProp_HapticEffectName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HapticEffectName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(HapticEffectName, HapticBlueprintLibrary_eventPlayHapticPattern_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequence()
	{
		struct HapticBlueprintLibrary_eventPlayHapticSequence_Parms
		{
			FString HapticEffectName;
			int32 Where;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayHapticSequence"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPlayHapticSequence_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequence_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequence_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequence_Parms), sizeof(bool), true);
			UProperty* NewProp_Where = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Where"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Where, HapticBlueprintLibrary_eventPlayHapticSequence_Parms), 0x0010000000000080);
			UProperty* NewProp_HapticEffectName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HapticEffectName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(HapticEffectName, HapticBlueprintLibrary_eventPlayHapticSequence_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequenceOnAll()
	{
		struct HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms
		{
			FString HapticEffectName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayHapticSequenceOnAll"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms), sizeof(bool), true);
			UProperty* NewProp_HapticEffectName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HapticEffectName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(HapticEffectName, HapticBlueprintLibrary_eventPlayHapticSequenceOnAll_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_PluginLoadedSuccessfully()
	{
		struct HapticBlueprintLibrary_eventPluginLoadedSuccessfully_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PluginLoadedSuccessfully"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(HapticBlueprintLibrary_eventPluginLoadedSuccessfully_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HapticBlueprintLibrary_eventPluginLoadedSuccessfully_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HapticBlueprintLibrary_eventPluginLoadedSuccessfully_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HapticBlueprintLibrary_eventPluginLoadedSuccessfully_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHapticBlueprintLibrary_ResetPlugin()
	{
		UObject* Outer=Z_Construct_UClass_UHapticBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResetPlugin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HapticSuit"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UHapticBlueprintLibrary_NoRegister()
	{
		return UHapticBlueprintLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UHapticBlueprintLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_HapticSuit();
			OuterClass = UHapticBlueprintLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_ClearAllHaptics());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHaptic());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticExperience());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticPattern());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequence());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequenceOnAll());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_PluginLoadedSuccessfully());
				OuterClass->LinkChild(Z_Construct_UFunction_UHapticBlueprintLibrary_ResetPlugin());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_ClearAllHaptics(), "ClearAllHaptics"); // 1864123311
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHaptic(), "PlayHaptic"); // 3951451391
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticExperience(), "PlayHapticExperience"); // 3321241838
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticPattern(), "PlayHapticPattern"); // 52500945
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequence(), "PlayHapticSequence"); // 2047461075
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PlayHapticSequenceOnAll(), "PlayHapticSequenceOnAll"); // 3268634183
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_PluginLoadedSuccessfully(), "PluginLoadedSuccessfully"); // 3796563653
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHapticBlueprintLibrary_ResetPlugin(), "ResetPlugin"); // 4280378797
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HapticBlueprintLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/HapticBlueprintLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UHapticBlueprintLibrary(Z_Construct_UClass_UHapticBlueprintLibrary, &UHapticBlueprintLibrary::StaticClass, TEXT("UHapticBlueprintLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UHapticBlueprintLibrary);
	UPackage* Z_Construct_UPackage__Script_HapticSuit()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/HapticSuit")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x78725CD5;
			Guid.B = 0x54DCE2F0;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
